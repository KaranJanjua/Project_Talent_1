[{"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\index.js":"1","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\App.js":"2","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\registerServiceWorker.js":"3","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Layout.js":"4","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Nav_Menu.jsx":"5","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Create_CustomerModal.jsx":"6","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Edit_CustomerModal.jsx":"7","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Delete_CustomerModal.jsx":"8","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Customer.jsx":"9","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Product.jsx":"10","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Create_ProductModal.jsx":"11","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Edit_ProductModal.jsx":"12","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Delete_ProductModal.jsx":"13","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Store.jsx":"14","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Create_StoreModal.jsx":"15","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Edit_StoreModal.jsx":"16","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Delete_StoreModal.jsx":"17","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Sale.jsx":"18","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Create_SaleModal.jsx":"19","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Delete_SaleModal.jsx":"20","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Edit_SaleModal.jsx":"21"},{"size":477,"mtime":1609026396096,"results":"22","hashOfConfig":"23"},{"size":775,"mtime":1608817482640,"results":"24","hashOfConfig":"23"},{"size":4121,"mtime":1608473011286,"results":"25","hashOfConfig":"23"},{"size":372,"mtime":1608512725169,"results":"26","hashOfConfig":"23"},{"size":1458,"mtime":1608817504616,"results":"27","hashOfConfig":"23"},{"size":2039,"mtime":1609751026167,"results":"28","hashOfConfig":"23"},{"size":2594,"mtime":1609748944869,"results":"29","hashOfConfig":"23"},{"size":1244,"mtime":1609905447128,"results":"30","hashOfConfig":"23"},{"size":3138,"mtime":1609919087314,"results":"31","hashOfConfig":"23"},{"size":3048,"mtime":1609905886667,"results":"32","hashOfConfig":"23"},{"size":2004,"mtime":1609749007800,"results":"33","hashOfConfig":"23"},{"size":2527,"mtime":1609749050956,"results":"34","hashOfConfig":"23"},{"size":1224,"mtime":1608688743614,"results":"35","hashOfConfig":"23"},{"size":3002,"mtime":1609919105305,"results":"36","hashOfConfig":"23"},{"size":2017,"mtime":1609749116044,"results":"37","hashOfConfig":"23"},{"size":2408,"mtime":1609749155451,"results":"38","hashOfConfig":"23"},{"size":1092,"mtime":1608798073816,"results":"39","hashOfConfig":"23"},{"size":4279,"mtime":1609743993829,"results":"40","hashOfConfig":"23"},{"size":4774,"mtime":1609748170155,"results":"41","hashOfConfig":"23"},{"size":1195,"mtime":1609488875831,"results":"42","hashOfConfig":"23"},{"size":4847,"mtime":1609749363779,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1b8erfh",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\index.js",[],["96","97","98"],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\App.js",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\registerServiceWorker.js",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Layout.js",["99"],"import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport Nav_Menu from './Nav_Menu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Nav_Menu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Nav_Menu.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Create_CustomerModal.jsx",["100"],"import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Form, Modal,Message } from \"semantic-ui-react\";\r\n\r\nconst Create_CustomerModal = (props) => {\r\n  const { open, handelModal } = props;\r\n  const [name, setname] = useState();\r\n  const [address, setaddress] = useState();\r\n\r\n  const handleChange = (e, field) => {\r\n    switch (field) {\r\n      case \"name\":\r\n        console.log(e.target.value);\r\n        setname(e.target.value);\r\n        break;\r\n      case \"address\":\r\n        console.log(e.target.value);\r\n        setaddress(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const CreateCustomer = () => {\r\n\r\n    if(name != null && address != null){\r\n\r\n      Axios.post(\"/Customers/PostCustomer\", {\r\n        Name: name,\r\n        Address: address,\r\n      })\r\n      .then((response) => {\r\n        handelModal(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Fail to add new Customer. Error:\" + error);\r\n      });\r\n    } else {\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Modal open={open}>\r\n      <Modal.Header>Create Customer</Modal.Header>\r\n      <Modal.Content>\r\n        <Form>\r\n          <Form.Field>\r\n            <label>Name</label>\r\n            <input\r\n              placeholder=\"Enter name here\"\r\n              onChange={(event) => handleChange(event, \"name\")}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Address</label>\r\n            <input\r\n              placeholder=\"Enter Address here\"\r\n              onChange={(event) => handleChange(event, \"address\")}\r\n            />\r\n          </Form.Field>\r\n        </Form>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          color=\"red\"\r\n          onClick={() => {\r\n            return handelModal(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button color=\"green\" onClick={CreateCustomer}>\r\n          Submit\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Create_CustomerModal;\r\n","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Edit_CustomerModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Delete_CustomerModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Customer\\Customer.jsx",["101","102","103"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Table, Button, Icon } from \"semantic-ui-react\";\r\nimport Create_CustomerModal from \"./Create_CustomerModal\";\r\nimport Edit_CustomerModal from \"./Edit_CustomerModal\";\r\nimport Del_CustomerModal from \"./Delete_CustomerModal\";\r\n\r\nconst Customer = (props) => {\r\n  const [Customers, setcustomers] = useState([]);\r\n  const [Customer, setCustomer] = useState();\r\n  const [open, setopen] = useState(false);\r\n  const [open_Edit, setopen_Edit] = useState(false);\r\n  const [open_Del, setopen_Del] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Customers) {\r\n      GetCustomers();\r\n    }\r\n  }, [Customers]);\r\n\r\n  const GetCustomers = () => {\r\n    Axios.get(\"/Customers/GetCustomer\")\r\n      .then((response) => {\r\n        setcustomers(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (Customer) => {\r\n    setCustomer(Customer);\r\n    setopen_Edit(true);\r\n  };\r\n\r\n  const handleDelete = (Customer_edit) => {\r\n    console.log(\"Handeling delete\");\r\n    setCustomer(Customer_edit);\r\n    setopen_Del(true);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Create_CustomerModal\r\n        open={open}\r\n        handelModal={(value) => setopen(value)}\r\n      />\r\n      <Edit_CustomerModal\r\n        open={open_Edit}\r\n        Customer={Customer}\r\n        handelModal={(value) => setopen_Edit(value)}\r\n      />\r\n      <Del_CustomerModal\r\n        open={open_Del}\r\n        Customer={Customer}\r\n        handelModal={(value) => setopen_Del(value)}\r\n      />\r\n\r\n      <h1>Customer Table</h1>\r\n      <Button onClick={() => setopen(true)} primary>\r\n        {\" \"}\r\n        New Customer{\" \"}\r\n      </Button>\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Address</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {Customers.map((c, index) => {\r\n            return (\r\n              <Table.Row>\r\n                <Table.Cell>{c.name}</Table.Cell>\r\n                <Table.Cell>{c.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    style={{ backgroundColor: \"olive\" }}\r\n                    positive\r\n                    onClick={() => handleEdit(c)}\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    Edit\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    style={{ backgroundColor: \"red\" }}\r\n                    positive\r\n                    onClick={() => handleDelete(c)}\r\n                  >\r\n                    <Icon name=\"delete\" />\r\n                    Delete\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\nexport default Customer;\r\n","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Product.jsx",["104","105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Table, Button, Icon } from \"semantic-ui-react\";\r\nimport Create_ProductModal from \"./Create_ProductModal\";\r\nimport Edit_ProductModal from \"./Edit_ProductModal\";\r\nimport Delete_ProductModal from \"./Delete_ProductModal\";\r\n\r\nconst Product = (props) => {\r\n  const [Products, setProducts] = useState([]);\r\n  const [Product, setProduct] = useState();\r\n  const [open_create, setopen_create] = useState(false);\r\n  const [open_Edit, setopen_Edit] = useState(false);\r\n  const [open_Del, setopen_Del] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Products) {\r\n      GetProducts();\r\n    }\r\n  }, [Products]);\r\n\r\n  const GetProducts = () => {\r\n    Axios.get(\"/Products/GetProduct\")\r\n      .then((response) => {\r\n        setProducts(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (Product) => {\r\n    setProduct(Product);\r\n    setopen_Edit(true);\r\n  };\r\n\r\n  const handleDelete =(Product)=>{\r\n      setProduct(Product);\r\n      setopen_Del(true);\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Edit_ProductModal\r\n        open={open_Edit}\r\n        Product={Product}\r\n        handelModal={(value) => setopen_Edit(value)}\r\n      />\r\n\r\n      <Create_ProductModal\r\n        open={open_create}\r\n        handelModal={(value) => setopen_create(value)}\r\n      />\r\n      <Delete_ProductModal\r\n        open={open_Del}\r\n        Product={Product}\r\n        handelModal={(value) => setopen_Del(value)}\r\n      />\r\n\r\n      <h1>Product Table</h1>\r\n      <Button primary onClick={() => setopen_create(true)}>\r\n        New Product\r\n      </Button>\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>NAME</Table.HeaderCell>\r\n            <Table.HeaderCell>PRICE</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {Products.map((p, index) => {\r\n            return (\r\n              <Table.Row>\r\n                <Table.Cell>{p.name}</Table.Cell>\r\n                <Table.Cell>{p.price}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    style={{ backgroundColor: \"olive\" }}\r\n                    positive\r\n                    onClick={() => handleEdit(p)}\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    Edit\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button style={{ backgroundColor: \"red\" }} \r\n                  positive\r\n                  onClick={()=>handleDelete(p)}\r\n                  >\r\n                    <Icon name=\"delete\" />\r\n                    Delete\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\nexport default Product;\r\n","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Create_ProductModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Edit_ProductModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Product\\Delete_ProductModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Store.jsx",["107","108","109"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Table, Button, Icon } from \"semantic-ui-react\";\r\nimport Create_StoreModal from \"./Create_StoreModal\";\r\nimport Edit_StoreModal from \"./Edit_StoreModal\";\r\nimport Delete_StoreModal from \"./Delete_StoreModal\";\r\n\r\nconst Store = (props) => {\r\n  const [Stores, setStores] = useState([]);\r\n  const [Store, setStore] = useState();\r\n  const [Open_create, setOpen_create] = useState(false);\r\n  const [Open_Edit, setOpen_Edit] = useState(false);\r\n  const [Open_Del, setOpen_Del] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Stores) {\r\n      GetStores();\r\n    }\r\n  }, [Stores]);\r\n\r\n  const GetStores = () => {\r\n    Axios.get(\"/Stores/GetStore\")\r\n      .then((response) => {\r\n        setStores(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (Store) => {\r\n    setStore(Store);\r\n    setOpen_Edit(true);\r\n  };\r\n  const handleDelete = (Store) => {\r\n    setStore(Store);\r\n    setOpen_Del(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Create_StoreModal\r\n        open={Open_create}\r\n        handleModal={(value) => setOpen_create(value)}\r\n      />\r\n      <Edit_StoreModal\r\n        open={Open_Edit}\r\n        Store={Store}\r\n        handleModal={(value) => setOpen_Edit(value)}\r\n      />\r\n      <Delete_StoreModal\r\n        open={Open_Del}\r\n        Store={Store}\r\n        handleModal={(value) => setOpen_Del(value)}\r\n      />\r\n\r\n      <h1>Store Table</h1>\r\n      <Button primary onClick={() => setOpen_create(true)}>\r\n        New Store\r\n      </Button>\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>NAME</Table.HeaderCell>\r\n            <Table.HeaderCell>ADDRESS</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {Stores.map((s, index) => {\r\n            return (\r\n              <Table.Row>\r\n                <Table.Cell>{s.name}</Table.Cell>\r\n                <Table.Cell>{s.address}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    style={{ backgroundColor: \"olive\" }}\r\n                    positive\r\n                    onClick={() => handleEdit(s)}\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    Edit\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    style={{ backgroundColor: \"red\" }}\r\n                    positive\r\n                    onClick={() => handleDelete(s)}\r\n                  >\r\n                    <Icon name=\"delete\" />\r\n                    Delete\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\nexport default Store;\r\n","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Create_StoreModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Edit_StoreModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Store\\Delete_StoreModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Sale.jsx",["110","111","112","113","114","115","116"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { Table, Button, Icon, Dropdown } from \"semantic-ui-react\";\r\nimport Create_SalesModal from \"./Create_SaleModal\";\r\nimport Delete_SaleModal from \"./Delete_SaleModal\";\r\nimport Edit_SaleModal from \"./Edit_SaleModal\";\r\nimport dateFormat from 'dateformat';\r\n\r\nconst Sale = (props) => {\r\n  const [Sales, setSales] = useState([]);\r\n  const [Sale, setSale] = useState();\r\n  const [Open_Create, setOpen_Create] = useState(false);\r\n  const [Open_Delete, setOpen_Delete] = useState(false);\r\n  const [Open_Edit, setOpen_Edit] = useState(false);\r\n\r\n  const [Customers, setCustomers] = useState([]);\r\n  const [Products, setProducts] = useState([]);\r\n  const [Store, setStore] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (Customers) {\r\n      \r\n      GetCustomers();\r\n      GetProducts();\r\n      GetStores();\r\n      GetSales();\r\n    }\r\n  }, [Customers]);\r\n\r\n  const GetSales = () => {\r\n    Axios.get(\"/Sales/GetSales\").then((response) => {\r\n      setSales(response.data);      \r\n    });\r\n  };\r\n\r\n  const GetCustomers = () => {\r\n    Axios.get(\"/Customers/GetCustomer\").then((response) => {\r\n      setCustomers(response.data);\r\n    });\r\n  };\r\n  const GetProducts = () => {\r\n    Axios.get(\"/Products/GetProduct\").then((response) => {\r\n      setProducts(response.data);\r\n    });\r\n  };\r\n\r\n  const GetStores = () => {\r\n    Axios.get(\"/Stores/GetStore\").then((response) => {\r\n      setStore(response.data);\r\n    });\r\n  };\r\n\r\n  const handleDelete = (s) => {\r\n    setSale(s);\r\n    setOpen_Delete(true);\r\n  };\r\n\r\n  const handleEdit = (s) => {\r\n    setSale(s);\r\n    setOpen_Edit(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Create_SalesModal\r\n        open={Open_Create}\r\n        handelModal={(value) => setOpen_Create(value)}\r\n      />\r\n      <Delete_SaleModal\r\n        open={Open_Delete}\r\n        handelModal={(value) => setOpen_Delete(value)}\r\n        Sale={Sale}\r\n      />\r\n\r\n      <Edit_SaleModal\r\n        open={Open_Edit}\r\n        handelModal={(value) => setOpen_Edit(value)}\r\n        Sale={Sale}\r\n      />\r\n      <h1>Sales Table</h1>\r\n      <Button primary onClick={() => setOpen_Create(true)}>\r\n        New Sale\r\n      </Button>\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Customer</Table.HeaderCell>\r\n            <Table.HeaderCell>Product</Table.HeaderCell>\r\n            <Table.HeaderCell>Store</Table.HeaderCell>\r\n            <Table.HeaderCell>Date Sold</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {Sales.map((s) => {\r\n            return ( \r\n              <Table.Row>\r\n                {Customers.map((c) => {\r\n                  if (c.id===s.customerId) {\r\n                    return (<Table.Cell>{c.name} </Table.Cell>);\r\n                  }\r\n                })}\r\n\r\n                {Products.map((p) => {\r\n                  if (p.id===s.productId) {\r\n                    return (<Table.Cell>{p.name} </Table.Cell>);\r\n                  }\r\n                })}\r\n\r\n                {Store.map((st) => {\r\n                  if (st.id===s.storeId) {\r\n                    return (<Table.Cell>{st.name} </Table.Cell>);\r\n                  }\r\n                })}\r\n\r\n                <Table.Cell>{dateFormat(s.dateSold,\"mmmm dS, yyyy\")}</Table.Cell>\r\n\r\n                <Table.Cell>\r\n                  <Button\r\n                    style={{ backgroundColor: \"olive\" }}\r\n                    positive\r\n                    onClick={() => handleEdit(s)}\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    Edit\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    style={{ backgroundColor: \"red\" }}\r\n                    positive\r\n                    onClick={() => handleDelete(s)}\r\n                  >\r\n                    <Icon name=\"delete\" />\r\n                    Delete\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\nexport default Sale;\r\n","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Create_SaleModal.jsx",["117","118","119","120"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Form, Modal } from \"semantic-ui-react\";\r\nimport Select from \"react-select\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\n\r\n\r\nconst Create_SaleModal = (props) => {\r\n  const { open, handelModal } = props;\r\n  const [Customers, setCustomers] = useState([]);\r\n  const [Cust_Selection, setCust_Selection] = useState([]);\r\n  const [Customer_name, setCustomer_name] = useState();\r\n  const [Customer_Id, setCustomer_Id] = useState();\r\n\r\n  const [Products, setProducts] = useState([]);\r\n  const [Product_selection, setProduct_selection] = useState([]);\r\n  const [Product_name, setProduct_name] = useState();\r\n  const [Product_Id, setProduct_Id] = useState();\r\n\r\n  const [Store, setStore] = useState([]);\r\n  const [Store_selection, setStore_selection] = useState([]);\r\n  const [Store_name, setStore_name] = useState();\r\n  const [Store_Id, setStore_Id] = useState();\r\n\r\n  const [currentDate, setNewDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (Customers) {\r\n      GetCustomers();\r\n      GetProducts();\r\n      GetStores();\r\n    }\r\n  }, [Customers]);\r\n\r\n  const GetCustomers = () => {\r\n    Axios.get(\"/Customers/GetCustomer\").then((response) => {\r\n      setCustomers(response.data);\r\n      const options = Customers.map((d) => ({\r\n        value: d.id,\r\n        label: d.name,\r\n      }));\r\n\r\n      setCust_Selection(options);\r\n    });\r\n  };\r\n\r\n  const GetProducts = () => {\r\n    Axios.get(\"/Products/GetProduct\").then((response) => {\r\n      setProducts(response.data);\r\n\r\n      const Product_options = Products.map((d) => ({\r\n        value: d.id,\r\n        label: d.name,\r\n      }));\r\n\r\n      setProduct_selection(Product_options);\r\n    });\r\n  };\r\n\r\n  const GetStores = () => {\r\n    Axios.get(\"/Stores/GetStore\").then((response) => {\r\n      setStore(response.data);\r\n\r\n      const Store_options = Store.map((d) => ({\r\n        value: d.id,\r\n        label: d.name,\r\n      }));\r\n\r\n      setStore_selection(Store_options);\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (event, data) => {\r\n    setNewDate(data.value);\r\n\r\n  };\r\n  const handleChange = (e, Field) => {\r\n    switch (Field) {\r\n      case \"Customer\":\r\n        setCustomer_name(e.label);\r\n        setCustomer_Id(e.value);\r\n\r\n        break;\r\n\r\n      case \"Product\":\r\n        setProduct_name(e.label);\r\n        setProduct_Id(e.value);\r\n        break;\r\n\r\n      case \"Store\":\r\n        setStore_name(e.label);\r\n        setStore_Id(e.value);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const CreateSale = () => {\r\n    if (Customer_Id !=null && Product_Id !=null && Store_Id !=null){\r\n\r\n    Axios.post(\"/Sales/PostSales\", {\r\n      customerId: Customer_Id,\r\n      productId: Product_Id,\r\n      storeId: Store_Id,\r\n      dateSold: currentDate,\r\n    })\r\n      .then((response) => {\r\n        handelModal(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error:\" + error);\r\n      });\r\n    }else {\r\n      console.log('All fields must be filled');\r\n    }  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={open}>\r\n        <Modal.Header>Create Sales</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Date</label>\r\n              <SemanticDatepicker onChange={handleDateChange} />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <label>Customer</label>\r\n              <Select\r\n                options={Cust_Selection}\r\n                onChange={(event) => {\r\n                  return handleChange(event, \"Customer\");\r\n                }}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <label>Product</label>\r\n              <Select\r\n                options={Product_selection}\r\n                onChange={(event) => {\r\n                  return handleChange(event, \"Product\");\r\n                }}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <label>Store</label>\r\n              <Select\r\n                options={Store_selection}\r\n                onChange={(event) => {\r\n                  return handleChange(event, \"Store\");\r\n                }}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            color=\"black\"\r\n            onClick={() => {\r\n              return handelModal(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"green\" onClick={CreateSale}>\r\n            Create\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create_SaleModal;\r\n","C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Delete_SaleModal.jsx",[],"C:\\Users\\karanbirjanjua\\source\\repos\\Project_Talent_1\\Project_Talent_1\\ClientApp\\src\\components\\Sale\\Edit_SaleModal.jsx",["121","122","123","124","125"],"import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal,Message } from \"semantic-ui-react\";\r\nimport Select from \"react-select\";\r\n\r\nconst Edit_SaleModal = (props) => {\r\n  const { open, handelModal, Sale } = props;\r\n\r\n  const [currentDate, setNewDate] = useState(null);\r\n\r\n  const [Customer_Id, setCustomer_Id] = useState();\r\n  const [Customer_name, setCustomer_name] = useState();\r\n  const [Customers, setCustomers] = useState([]);\r\n  const [Cust_Selection, setCust_Selection] = useState([]);\r\n\r\n  const [Products, setProducts] = useState([]);\r\n  const [Product_selection, setProduct_selection] = useState([]);\r\n  const [Product_name, setProduct_name] = useState();\r\n  const [Product_Id, setProduct_Id] = useState();\r\n\r\n  const [Store, setStore] = useState([]);\r\n  const [Store_selection, setStore_selection] = useState([]);\r\n  const [Store_name, setStore_name] = useState();\r\n  const [Store_Id, setStore_Id] = useState();\r\n\r\n  useEffect(() => {\r\n    if (Customers) {\r\n      GetCustomers();\r\n      GetProducts();\r\n      GetStores();\r\n    }\r\n  }, [Customers]);\r\n\r\n  const GetCustomers = () => {\r\n    Axios.get(\"/Customers/GetCustomer\").then((response) => {\r\n      setCustomers(response.data);\r\n      const options = Customers.map((d) => ({\r\n        value: d.id,\r\n        label: d.name,\r\n      }));\r\n\r\n      setCust_Selection(options);\r\n    });\r\n  };\r\n\r\n  const GetProducts = () => {\r\n    Axios.get(\"/Products/GetProduct\").then((response) => {\r\n      setProducts(response.data);\r\n\r\n      const Product_options = Products.map((d) => ({\r\n        value: d.id,\r\n        label: d.name,\r\n      }));\r\n\r\n      setProduct_selection(Product_options);\r\n    });\r\n  };\r\n\r\n  const GetStores = () => {\r\n    Axios.get(\"/Stores/GetStore\").then((response) => {\r\n      setStore(response.data);\r\n\r\n      const Store_options = Store.map((d) => ({\r\n        value: d.id,\r\n        label: d.name,\r\n      }));\r\n\r\n      setStore_selection(Store_options);\r\n    });\r\n  };\r\n\r\n  const handleChange = (e, Field) => {\r\n    switch (Field) {\r\n      case \"Date\":\r\n        setNewDate(e.data);\r\n\r\n        break;\r\n\r\n      case \"Customer\":\r\n        setCustomer_name(e.label);\r\n        setCustomer_Id(e.value);\r\n\r\n        break;\r\n\r\n      case \"Product\":\r\n        setProduct_name(e.label);\r\n        setProduct_Id(e.value);\r\n        break;\r\n\r\n      case \"Store\":\r\n        setStore_name(e.label);\r\n        setStore_Id(e.value);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const EditSale = (id) => {\r\n    if (Customer_Id !=null && Product_Id !=null && Store_Id !=null){\r\n\r\n      Axios.put(\"/Sales/PutSales/\" + Sale.id, {\r\n        id: id,\r\n        customerId: Customer_Id,\r\n        productId: Product_Id,\r\n        storeId: Store_Id,\r\n        dateSold: currentDate,\r\n      })\r\n      .then((response) => {\r\n        handelModal(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(` Failed to Update Error:` + error);\r\n      });\r\n    } else {\r\n      \r\n    }\r\n  };\r\n    \r\n  if (Sale) {\r\n    return (\r\n      <Modal open={open}>\r\n        <Modal.Header>Update Sale</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>Date</label>\r\n              <input\r\n                type=\"date\"\r\n                onChange={(event) => {\r\n                  return handleChange(event, \"Date\");\r\n                }}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <label>Customer</label>\r\n              <Select\r\n                value={Customer_Id}\r\n                options={Cust_Selection}\r\n                onChange={(event) => {\r\n                  return handleChange(event, \"Customer\");\r\n                }}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <label>Product</label>\r\n              <Select\r\n                options={Product_selection}\r\n                onChange={(event) => {\r\n                  return handleChange(event, \"Product\");\r\n                }}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <label>Store</label>\r\n              <Select\r\n                options={Store_selection}\r\n                onChange={(event) => {\r\n                  return handleChange(event, \"Store\");\r\n                }}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            color=\"red\"\r\n            onClick={() => {\r\n              return handelModal(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button color=\"green\" onClick={() => EditSale(Sale.id)}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nexport default Edit_SaleModal;\r\n",["126","127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":11,"column":9,"nodeType":"137","endLine":11,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":3,"column":30,"nodeType":"140","messageId":"141","endLine":3,"endColumn":37},{"ruleId":"135","severity":1,"message":"142","line":45,"column":7,"nodeType":"137","endLine":48,"endColumn":9},{"ruleId":"135","severity":1,"message":"143","line":49,"column":7,"nodeType":"137","endLine":53,"endColumn":9},{"ruleId":"135","severity":1,"message":"144","line":54,"column":7,"nodeType":"137","endLine":58,"endColumn":9},{"ruleId":"135","severity":1,"message":"145","line":44,"column":7,"nodeType":"137","endLine":48,"endColumn":9},{"ruleId":"135","severity":1,"message":"146","line":50,"column":7,"nodeType":"137","endLine":53,"endColumn":9},{"ruleId":"135","severity":1,"message":"147","line":54,"column":7,"nodeType":"137","endLine":58,"endColumn":9},{"ruleId":"135","severity":1,"message":"148","line":42,"column":7,"nodeType":"137","endLine":45,"endColumn":9},{"ruleId":"135","severity":1,"message":"149","line":46,"column":7,"nodeType":"137","endLine":50,"endColumn":9},{"ruleId":"135","severity":1,"message":"150","line":51,"column":7,"nodeType":"137","endLine":55,"endColumn":9},{"ruleId":"138","severity":1,"message":"151","line":3,"column":31,"nodeType":"140","messageId":"141","endLine":3,"endColumn":39},{"ruleId":"135","severity":1,"message":"152","line":65,"column":7,"nodeType":"137","endLine":68,"endColumn":9},{"ruleId":"135","severity":1,"message":"153","line":69,"column":7,"nodeType":"137","endLine":73,"endColumn":9},{"ruleId":"135","severity":1,"message":"154","line":75,"column":7,"nodeType":"137","endLine":79,"endColumn":9},{"ruleId":"155","severity":1,"message":"156","line":101,"column":36,"nodeType":"157","messageId":"158","endLine":101,"endColumn":38},{"ruleId":"155","severity":1,"message":"156","line":107,"column":35,"nodeType":"157","messageId":"158","endLine":107,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":113,"column":33,"nodeType":"157","messageId":"158","endLine":113,"endColumn":35},{"ruleId":"138","severity":1,"message":"159","line":13,"column":10,"nodeType":"140","messageId":"141","endLine":13,"endColumn":23},{"ruleId":"138","severity":1,"message":"160","line":18,"column":10,"nodeType":"140","messageId":"141","endLine":18,"endColumn":22},{"ruleId":"138","severity":1,"message":"161","line":23,"column":10,"nodeType":"140","messageId":"141","endLine":23,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":34,"column":6,"nodeType":"164","endLine":34,"endColumn":17,"suggestions":"165"},{"ruleId":"138","severity":1,"message":"139","line":3,"column":30,"nodeType":"140","messageId":"141","endLine":3,"endColumn":37},{"ruleId":"138","severity":1,"message":"159","line":12,"column":10,"nodeType":"140","messageId":"141","endLine":12,"endColumn":23},{"ruleId":"138","severity":1,"message":"160","line":18,"column":10,"nodeType":"140","messageId":"141","endLine":18,"endColumn":22},{"ruleId":"138","severity":1,"message":"161","line":23,"column":10,"nodeType":"140","messageId":"141","endLine":23,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":32,"column":6,"nodeType":"164","endLine":32,"endColumn":17,"suggestions":"166"},{"ruleId":"129","replacedBy":"167"},{"ruleId":"131","replacedBy":"168"},{"ruleId":"133","replacedBy":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"jsx-a11y/accessible-emoji",[],"react/jsx-pascal-case","Imported JSX component Nav_Menu must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","Imported JSX component Create_CustomerModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_CustomerModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Del_CustomerModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_ProductModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Create_ProductModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_ProductModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Create_StoreModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_StoreModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_StoreModal must be in PascalCase or SCREAMING_SNAKE_CASE","'Dropdown' is defined but never used.","Imported JSX component Create_SalesModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_SaleModal must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_SaleModal must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Customer_name' is assigned a value but never used.","'Product_name' is assigned a value but never used.","'Store_name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetCustomers', 'GetProducts', and 'GetStores'. Either include them or remove the dependency array.","ArrayExpression",["172"],["173"],["170"],["171"],[],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},"Update the dependencies array to be: [Customers, GetCustomers, GetProducts, GetStores]",{"range":"177","text":"178"},{"range":"179","text":"178"},[1232,1243],"[Customers, GetCustomers, GetProducts, GetStores]",[1099,1110]]